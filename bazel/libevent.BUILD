config_setting(
    name = "with_openssl",
    define_values = {
        "with_openssl": "false",
    },
    visibility = ["//visibility:public"],
)

cc_library(
    name = "libevent",
    srcs = [
        "buffer.c",
        "bufferevent.c",
        "bufferevent-internal.h",
        "bufferevent_filter.c",
        "bufferevent_openssl.c",
        "bufferevent_pair.c",
        "bufferevent_ratelim.c",
        "bufferevent_sock.c",
        "changelist-internal.h",
        "defer-internal.h",
        "epoll.c",
        "epolltable-internal.h",
        "evbuffer-internal.h",
        "evconfig-private.h",
        "evdns.c",
        "event.c",
        "event-internal.h",
        "event_tagging.c",
        "evmap.c",
        "evmap-internal.h",
        "evrpc.c",
        "evrpc-internal.h",
        "evsignal-internal.h",
        "evthread.c",
        "evthread-internal.h",
        "evthread_pthread.c",
        "evutil.c",
        "evutil_rand.c",
        "evutil_time.c",
        "ht-internal.h",
        "http.c",
        "http-internal.h",
        "iocp-internal.h",
        "ipv6-internal.h",
        "listener.c",
        "log.c",
        "log-internal.h",
        "minheap-internal.h",
        "mm-internal.h",
        "openssl-compat.h",
        "poll.c",
        "ratelim-internal.h",
        "select.c",
        "signal.c",
        "strlcpy.c",
        "strlcpy-internal.h",
        "time-internal.h",
        "util-internal.h",
    ],
    hdrs = [
        "arc4random.c",
    ] + glob(
        [
            "include/**/*.h",
            "compat/**/*.h",
        ],
    ),
    #copts = ["-Wno-implicit-function-declaration"],
    includes = [
        "compat",
        "include",
    ],
    linkopts = ["-lpthread"] + select({
        ":with_openssl": [
            "-lssl",
            "-lcrypto",
        ],
        "//conditions:default": [],
    }),
    visibility = ["//visibility:public"],
    deps = select({
        ":with_openssl": [],
        "//conditions:default": ["//external:ssl"],
    }),
)
